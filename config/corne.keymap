/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        three {
            bindings = <&mo 3>;
            key-positions = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp ESC       &kp Q  &kp W  &kp E      &kp R  &kp T                   &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BACKSPACE
&kp TAB       &kp A  &kp S  &kp D      &kp F  &kp G                   &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp APOSTROPHE
&kp LEFT_ALT  &kp Z  &kp X  &kp C      &kp V  &kp B                   &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp LEFT_SHIFT
                            &kp LCTRL  &mo 1  &tp LEFT_SHIFT ENTER    &kp SPACE  &mo 2  &kp LEFT_GUI
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&trans     &kp EXCL   &kp AT            &kp HASH           &kp DLLR   &kp PRCNT    &kp CARET     &kp AMPS  &kp KP_MULTIPLY  &kp LPAR         &kp RPAR      &kp BSLH
&trans     &kp N1     &kp N2            &kp N3             &kp N4     &kp N5       &kp NUMBER_6  &kp N7    &kp NUMBER_8     &kp NUMBER_9     &kp NUMBER_0  &kp PIPE
&kp LSHFT  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL    &kp UNDER     &kp PLUS  &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp TILDE     &kp RSHFT
                                        &kp LGUI           &trans     &trans       &trans        &kp BSPC  &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &rgb_ug RGB_HUI
&trans      &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP        &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &rgb_ug RGB_SPI  &rgb_ug RGB_BRI
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_BRD
                                        &trans        &trans        &trans          &trans           &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans             &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_OFF    &rgb_ug RGB_ON  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans             &trans          &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans             &trans          &trans  &trans
            >;
        };
    };
};
